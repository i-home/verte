!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = e() : typeof define === 'function' && define.amd ? define(e) : t.Verte = e(); }(this, function () { 'use strict'; function n (t) { return (n = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; })(t); } function i (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); } function s (t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } function a (t, e, r) { return e && s(t.prototype, e), r && s(t, r), t; } function t (t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, {constructor: {value: t, writable: !0, configurable: !0}}), e && r(t, e); } function o (t) { return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t); })(t); } function r (t, e) { return (r = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t; })(t, e); } function l (t, e) { return !e || typeof e !== 'object' && typeof e !== 'function' ? (function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(t)) : e; } function u (t, e, r) { return (u = typeof Reflect !== 'undefined' && Reflect.get ? Reflect.get : function (t, e, r) { var n = (function (t, e) { for (;!Object.prototype.hasOwnProperty.call(t, e) && (t = o(t)) !== null;);return t; }(t, e)); if (n) { var i = Object.getOwnPropertyDescriptor(n, e); return i.get ? i.get.call(r) : i.value; } })(t, e, r || t); } function c (t) { return n(t) === 'object' && t.model ? t.model : (t.slice(0, 1) !== '#' || t.length !== 4 && t.length !== 7) && (t.slice(0, 1) !== '#' || t.length !== 6 && t.length !== 9) ? t.slice(0, 4).toUpperCase() === 'RGBA' ? 'rgb' : t.slice(0, 3).toUpperCase() === 'RGB' ? 'rgb' : t.slice(0, 4).toUpperCase() === 'HSLA' ? 'hsl' : t.slice(0, 3).toUpperCase() === 'HSL' && 'hsl' : 'hex'; } function h (t) { return isNaN(parseInt(t, 16)) ? 0 : parseInt(t, 16); } function d (e, r) { return function (t) { return e <= t && t <= r; }; } function e (t, e) { return Math.floor(Math.random() * (e - t + 1) + t); } function f (t, e, r) { var n = arguments.length > 2 && void 0 !== r ? r : 0.5; return Number((t * (1 - n) + e * n).toFixed(2)); } function p (t) { return !(void 0 === t || isNaN(t) || t < 0 || t > 1); } var v = (function () { function t (e) { var r = this; i(this, t), this.invalid = !this.validate(e), this.invalid || Object.keys(e).forEach(function (t) { r[t] = e[t]; }), this.init(); } return a(t, [{key: 'init', value: function () {}}, {key: 'validate', value: function (t) { return !!t && n(t) === 'object'; }}]), t; }()), m = (function () { function r () { return i(this, r), l(this, o(r).apply(this, arguments)); } return t(r, v), a(r, [{key: 'validate', value: function (t) { if (!u(o(r.prototype), 'validate', this).call(this, t)) return !1; var e = d(0, 255); return e(t.red) && e(t.green) && e(t.blue); }}, {key: 'init', value: function () { this.model = 'rgb', this.alpha = p(this.alpha) ? this.alpha : 1; }}, {key: 'toString', value: function () { return this.invalid ? 'Invalid Color' : d(0, 0.999)(this.alpha) ? 'rgba('.concat(this.red, ',').concat(this.green, ',').concat(this.blue, ',').concat(this.alpha, ')') : 'rgb('.concat(this.red, ',').concat(this.green, ',').concat(this.blue, ')'); }}]), r; }()), g = (function () { function r () { return i(this, r), l(this, o(r).apply(this, arguments)); } return t(r, v), a(r, [{key: 'validate', value: function (t) { if (!u(o(r.prototype), 'validate', this).call(this, t)) return !1; var e = d(0, 100); return d(0, 360)(t.hue) && e(t.lum) && e(t.sat); }}, {key: 'init', value: function () { this.model = 'hsl', this.alpha = p(this.alpha) ? this.alpha : 1; }}, {key: 'toString', value: function () { return this.invalid ? 'Invalid Color' : d(0, 0.999)(this.alpha) ? 'hsla('.concat(this.hue, ',').concat(this.sat, '%,').concat(this.lum, '%,').concat(this.alpha, ')') : 'hsl('.concat(this.hue, ',').concat(this.sat, '%,').concat(this.lum, '%)'); }}]), r; }()), b = (function () { function e () { return i(this, e), l(this, o(e).apply(this, arguments)); } return t(e, v), a(e, [{key: 'validate', value: function (t) { return !!u(o(e.prototype), 'validate', this).call(this, t) && /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test('#'.concat(t.red).concat(t.green).concat(t.blue)); }}, {key: 'init', value: function () { this.model = 'hex', this.alpha = void 0 !== this.alpha ? this.alpha : 'ff'; }}, {key: 'toString', value: function () { return this.invalid ? 'Invalid Color' : d(0, 0.999)(h(this.alpha) / 255) ? '#'.concat(this.red).concat(this.green).concat(this.blue).concat(this.alpha) : '#'.concat(this.red).concat(this.green).concat(this.blue); }}]), e; }()), y = Object.freeze({Color: v, RgbColor: m, HslColor: g, HexColor: b}); function C (t) { if (n(t) === 'object') return t; var e = t.match(/^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,*\s*(\d*(?:\.\d+)*)*\)/i); return !e || e.length < 4 ? new m() : new m({red: Number(e[1]), green: Number(e[2]), blue: Number(e[3]), alpha: Number(e[4])}); } function _ (t) { if (n(t) === 'object') return t; var e = (function (t) { var e = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])*$/i; return t.length !== 5 && t.length !== 4 || !e.test(t) || (t = t.replace(e, function (t, e, r, n, i) { return '#'.concat(e).concat(e).concat(r).concat(r).concat(n).concat(n).concat(i ? ''.concat(i).concat(i) : ''); })), t; }(t)), r = e.match(/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})*/i); return !r || r.length < 4 ? new b() : new b({hex: e, red: r[1], green: r[2], blue: r[3], alpha: r[4]}); } function x (t) { if (n(t) === 'object') return t; var e = t.match(/^hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*,*\s*(\d*(?:\.\d+)*)*\)/i); return !e || e.length < 4 ? new g() : new g({hue: Number(e[1]), sat: Number(e[2]), lum: Number(e[3]), alpha: Number(e[4])}); } function w (t) { return t = Math.floor(t), isNaN(t) ? '00' : ('0' + t.toString(16)).slice(-2); } function S (t) { if (!t) return new b(); var e = [w((t = C(t)).red), w(t.green), w(t.blue), t.alpha ? w(255 * t.alpha) : null]; return new b({red: e[0], green: e[1], blue: e[2], alpha: e[3] || 'ff'}); } function k (t) { if (!t) return new g(); var e = [(t = C(t)).red / 255, t.green / 255, t.blue / 255, t.alpha], r = e[0], n = e[1], i = e[2], s = e[3], a = 0, o = 0, l = 0, u = Math.min(r, n, i), c = Math.max(r, n, i); return l = (u + c) / 2, u !== c && (o = l > 0.5 ? (c - u) / (2 - c - u) : (c - u) / (c + u)), c <= r && u !== c && (a = (n - i) / (c - u) * 60), c <= n && u !== c && (a = 60 * (2 + (i - r) / (c - u))), c <= i && u !== c && (a = 60 * (4 + (r - n) / (c - u))), a = a < 0 ? Math.floor(a + 360) : Math.floor(a), o = Math.floor(100 * o), l = Math.floor(100 * l), new g({hue: a, sat: o, lum: l, alpha: s}); } function M (t) { if (!t) return new m(); var e = _(t), r = e.red, n = e.green, i = e.blue, s = e.alpha; return new m({red: h(r), green: h(n), blue: h(i), alpha: void 0 === s ? 1 : Number((h(s) / 255).toFixed(2))}); } function L (t) { return Math.min(Math.max(parseInt(t), 0), 255); } function H (t) { if (!t) return new m(); var e = [(t = x(t)).hue / 360, t.sat / 100, t.lum / 100, t.alpha], r = e[0], n = e[1], i = e[2], s = e[3], a = 0, o = 0, l = 0; if (n === 0 && (a = o = l = L(255 * i)), n !== 0) { var u = i >= 50 ? i + n - i * n : i * (1 + n), c = 2 * i - u, h = function (t) { return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? c + 6 * (u - c) * t : t < 0.5 ? u : t < 2 / 3 ? c + (u - c) * (2 / 3 - t) * 6 : c; }; a = L(255 * h(r + 1 / 3)), o = L(255 * h(r)), l = L(255 * h(r - 1 / 3)); } return new m({red: a, green: o, blue: l, alpha: s}); } function E (t) { var e = c(t); return e === 'hex' ? M(t) : e === 'hsl' ? H(t) : e === 'rgb' && typeof t === 'string' ? C(t) : e === 'rgb' && n(t) === 'object' ? t : new m(); } function R (t) { var e = c(t); return e === 'hex' ? (function (t) { return t ? k(M(t)) : new g(); }(t)) : e === 'rgb' ? k(t) : e === 'hsl' && typeof t === 'string' ? x(t) : e === 'hsl' && n(t) === 'object' ? t : new g(); } function $ (t) { var e = c(t); return e === 'rgb' ? S(t) : e === 'hsl' ? (function (t) { return t ? S(H(t)) : new b(); }(t)) : e === 'hex' && typeof t === 'string' ? _(t) : e === 'hex' && n(t) === 'object' ? t : new b(); } function P () { return 'rgb('.concat(e(0, 255), ', ').concat(e(0, 255), ', ').concat(e(0, 255), ')'); } function V (t, e, r) { t = E(t), e = E(e); var n = Math.floor(f(t.red, e.red, r)), i = Math.floor(f(t.green, e.green, r)), s = Math.floor(f(t.blue, e.blue, r)), a = f(t.alpha, e.alpha, r); return new m({red: n, green: i, blue: s, alpha: a}); } function N (t, e) { for (;t !== document && t !== null;) { if (t === e) return !0; t = t.parentNode; } return !1; } function O (t, r) { return t.reduce(function (t, e) { return Math.abs(e - r) < Math.abs(t - r) ? e : t; }); } function F (t, e) { return function (t) { return e.indexOf(t) !== -1; }; } function A (t) { if (t.type.match(/^touch/i)) { var e = t.touches[0]; return {x: e.clientX, y: e.clientY}; } return t.type.match(/^mouse/i) ? {x: t.clientX, y: t.clientY} : {x: 0, y: 0}; } function I () { var e = this, t = e.$createElement, r = e._self._c || t; return r('div', {ref: 'wrapper', staticClass: 'slider'}, [r('div', e._g({ref: 'track', staticClass: 'slider__track'}, e.trackSlide ? {mousedown: e.select, touchstart: e.select} : {}), [r('div', {ref: 'fill', staticClass: 'slider__fill'}), e._l(e.handles, function (t) { return r('div', {staticClass: 'slider__handle', style: 'transform: translate(' + t.position + 'px, 0); background-color: ' + t.color + ';', on: {mousedown: e.select, touchstart: e.select}}, [e.label ? r('div', {staticClass: 'slider__label'}, [e._v(e._s(t.value))]) : e._e()]); })], 2), r('input', {directives: [{name: 'show', rawName: 'v-show', value: e.editable, expression: 'editable'}], ref: 'input', staticClass: 'slider__input', attrs: {type: e.colorCode ? 'text' : 'number'}, on: {change: function (t) { return e.updateValue(t.target.value); }}})]); } var j = {name: 'VerteSlider', props: {gradient: Array, classes: Array, colorCode: {type: Boolean, default: !1}, editable: {type: Boolean, default: !0}, reverse: {type: Boolean, default: !1}, label: {type: Boolean, default: !1}, trackSlide: {type: Boolean, default: !0}, min: {type: Number, default: 0}, max: {type: Number, default: 255}, step: {type: Number, default: 1}, value: {type: Number, default: 0}, handlesValue: {type: Array, default: function () { return [0]; }}}, data: function () { return {fill: {translate: 0, scale: 0}, multiple: !1, currentValue: 0, handles: [], values: []}; }, watch: {gradient: function (t) { this.initGradient(t), this.reloadHandlesColor(); }, values: function () { this.multiple = this.values.length > 1, this.fill = !this.multiple && (this.fill || {}); }, value: function (t, e) { t !== e && t !== this.currentValue && this.updateValue(this.value, !0); }}, methods: {init: function () { var r = this; this.$emitInputEvent = (function (r, n) { var i; return void 0 === n && (n = !1), function () { var t = arguments, e = n && !i; window.cancelAnimationFrame(i), i = window.requestAnimationFrame(function () { i = null, n || r.apply(void 0, t); }), e && r.apply(void 0, arguments); }; }(function () { r.$emit('input', r.currentValue); })), this.multiple = this.values.length > 1, this.values = this.handlesValue, this.handles = this.handlesValue.map(function (t, e) { return {value: t, position: 0, color: '#fff'}; }), this.values.length === 1 && (this.values[0] = Number(this.value)), this.values.sort(), this.initElements(), this.gradient && this.initGradient(this.gradient), this.initEvents(), this.values.forEach(function (t, e) { r.activeHandle = e, r.updateValue(t, !0); }); }, initElements: function () { var t; this.wrapper = this.$refs.wrapper, this.track = this.$refs.track, this.fill = this.$refs.fill, this.wrapper.classList.toggle('slider--editable', this.editable), this.wrapper.classList.toggle('slider--reverse', this.reverse), this.classes && (t = this.wrapper.classList).add.apply(t, this.classes); }, initGradient: function (e) { e.length > 1 ? this.fill.style.backgroundImage = 'linear-gradient(90deg, ' + e + ')' : (this.fill.style.backgroundImage = '', this.fill.style.backgroundColor = e[0], this.handles.forEach(function (t) { t.style.color = e[0]; })); }, handleResize: function () { this.updateWidth(), this.updateValue(this.currentValue, !0); }, initEvents: function () { window.addEventListener('resize', this.handleResize); }, select: function (t) { if (t.preventDefault(), t.stopPropagation(), t.buttons !== 2) { this.updateWidth(), this.track.classList.add('slider--dragging'), this.ticking = !1; var e = this.getStepValue(t); if (this.multiple) { var r = O(this.values, e); this.activeHandle = this.values.indexOf(r); } this.updateValue(e), this.tempDrag = this.dragging.bind(this), this.tempRelease = this.release.bind(this), document.addEventListener('mousemove', this.tempDrag), document.addEventListener('touchmove', this.tempDrag), document.addEventListener('touchend', this.tempRelease), document.addEventListener('mouseup', this.tempRelease); } }, dragging: function (t) { var e = this, r = this.getStepValue(t); this.ticking || (window.requestAnimationFrame(function () { e.updateValue(r), e.ticking = !1; }), this.ticking = !0); }, release: function () { this.track.classList.remove('slider--dragging'), document.removeEventListener('mousemove', this.tempDrag), document.removeEventListener('touchmove', this.tempDrag), document.removeEventListener('mouseup', this.tempRelease), document.removeEventListener('touchend', this.tempRelease); }, getStepValue: function (t) { var e = A(t).x - this.currentX, r = parseInt(e / this.stepWidth + 0.5, 10) * this.step + this.min; return this.decimalsCount ? Number(r.toFixed(this.decimalsCount)) : r; }, updateWidth: function () { var t = this.track.getBoundingClientRect(); this.currentX = t.left, this.width = t.width, this.stepWidth = this.width / (this.max - this.min) * this.step; }, getPositionPercentage: function (t) { return ((t - this.min) / (this.max - this.min)).toFixed(2); }, normalizeValue: function (t) { if (isNaN(Number(t))) return this.value; if (this.multiple) { var e = this.values[this.activeHandle - 1] || this.min, r = this.values[this.activeHandle + 1] || this.max; t = Math.min(Math.max(Number(t), e), r); } return Math.min(Math.max(Number(t), this.min), this.max); }, addHandle: function (t) { var e = O(this.values, t), r = this.values.indexOf(e), n = this.values[r] <= t ? r + 1 : r; this.handles.splice(n, 0, {value: t, position: 0, color: '#fff'}), this.values.splice(n, 0, t), this.activeHandle = n, this.currentValue = null, this.updateValue(t); }, removeHandle: function (t) { this.handles.splice(t, 1), this.values.splice(t, 1), this.activeHandle = t === 0 ? t + 1 : t - 1; }, getHandleColor: function (t) { for (var e = this.gradient.length - 1, r = t, n = 1; n <= e; n++) if ((n - 1) / e <= r && r <= n / e) { var i = (r - (n - 1) / e) / (1 / e); return V(this.gradient[n - 1], this.gradient[n], i); } return 'rgb(0, 0, 0)'; }, reloadHandlesColor: function () { var i = this; this.handles.forEach(function (t, e) { var r = i.getPositionPercentage(t.value), n = i.getHandleColor(r); i.handles[e].color = n.toString(); }); }, updateValue: function (n, i) { var s = this; void 0 === i && (i = !1), window.requestAnimationFrame(function () { var t = s.normalizeValue(n), e = s.getPositionPercentage(t); if (s.fill && (s.fill.translate = e * s.width, s.fill.scale = 1 - e), s.values[s.activeHandle] = t, s.handles[s.activeHandle].value = t, s.handles[s.activeHandle].position = e * s.width, s.currentValue = t, s.$refs.input.value = s.currentValue, s.gradient) { var r = s.getHandleColor(e); s.handles[s.activeHandle].color = r.toString(), s.colorCode && (s.currentValue = r); }i || s.$emitInputEvent(); }); }}, created: function () { var t = this.step.toString().split('.')[1]; this.currentValue = this.value, this.decimalsCount = t ? t.length : 0; }, mounted: function () { var t = this; this.init(), this.$nextTick(function () { t.updateWidth(), t.updateValue(void 0, !0); }); }, destroyed: function () { window.removeEventListener('resize', this.handleResize); }}; I._withStripped = !0; B = {render: I, staticRenderFns: []}; function q () { var e = this, t = e.$createElement, r = e._self._c || t; return r('div', {ref: 'picker', staticClass: 'verte-picker', class: 'verte-picker--' + e.mode}, [r('div', {ref: 'origin', staticClass: 'verte-picker__origin'}, [r('canvas', {ref: 'canvas', staticClass: 'verte-picker__canvas', on: {mousedown: e.handleSelect, touchstart: e.handleSelect}}), r('div', {ref: 'cursor', staticClass: 'verte-picker__cursor', style: 'transform: translate3d(' + e.cursor.x + 'px, ' + e.cursor.y + 'px, 0)'})]), e.mode === 'square' ? r('slider', {staticClass: 'verte-picker__slider', attrs: {gradient: ['#f00', '#ff0', '#0f0', '#0ff', '#00f', '#f0f', '#f00'], editable: !1, max: 360}, model: {value: e.currentHue, callback: function (t) { e.currentHue = t; }, expression: 'currentHue'}}) : e._e(), e.mode === 'wheel' ? r('slider', {staticClass: 'verte-picker__slider', attrs: {gradient: ['hsl(' + e.currentColor.hue + ',0%,' + e.currentColor.lum + '%)', 'hsl(' + e.currentColor.hue + ',100%,' + e.currentColor.lum + '%)'], editable: !1, max: 100}, model: {value: e.currentSat, callback: function (t) { e.currentSat = t; }, expression: 'currentSat'}}) : e._e()], 1); } var B, D, U, W, T, z = (U = void 0, W = !(B = {render: I, staticRenderFns: []}), (T = (typeof (D = j) === 'function' ? D.options : D) || {}).__file = '/Users/igor/verte/src/components/Slider.vue', T.render || (T.render = B.render, T.staticRenderFns = B.staticRenderFns, T._compiled = !0, W && (T.functional = !0)), T._scopeId = U, T), G = {name: 'VertePicker', components: {Slider: z}, props: {mode: {type: String, default: 'square'}, edge: {type: Number, default: 250}, diameter: {type: Number, default: 180}, satSlider: {type: Boolean, default: !0}, alpha: {type: Number, default: 1}, value: {type: String, default: '#fff'}}, data: function () { return {currentHue: 0, currentSat: 0, currentColor: '', cursor: {}, preventUpdating: !1, preventEcho: !1}; }, watch: {value: function (t) { this.preventUpdating ? this.preventUpdating = !1 : this.handleValue(t, !0); }, currentSat: function () { this.updateWheelColors(), this.updateColor(); }, currentHue: function () { this.updateSquareColors(), this.updateColor(); }}, methods: {initSquare: function () { var t = this.edge; this.$refs.canvas.width = t, this.$refs.canvas.height = t - 100, this.ctx = this.$refs.canvas.getContext('2d'), this.updateSquareColors(); }, initWheel: function () { this.$refs.canvas.width = this.diameter, this.$refs.canvas.height = this.diameter, this.ctx = this.$refs.canvas.getContext('2d'), this.circle = {path: new Path2D(), xCords: this.diameter / 2, yCords: this.diameter / 2, radius: this.diameter / 2}, this.circle.path.moveTo(this.circle.xCords, this.circle.yCords), this.circle.path.arc(this.circle.xCords, this.circle.yCords, this.circle.radius, 0, 360), this.circle.path.closePath(), this.updateWheelColors(); }, handleValue: function (t, e) { void 0 === e && (e = !1); var r = this.pickerRect, n = r.width, i = r.height; if (this.currentColor = R(t), this.preventEcho = !0, this.mode === 'wheel') { var s = (100 - this.currentColor.lum) * (this.diameter / 200), a = this.diameter / 2, o = (function (t, e) { return {x: t * Math.cos(e * Math.PI * 2), y: t * Math.sin(e * Math.PI * 2)}; }(s, this.currentColor.hue / 360)); this.cursor = {x: o.x + a, y: o.y + a}, this.currentSat = this.currentColor.sat; } if (this.mode === 'square') { var l = this.currentColor.sat / 100 * n, u = (100 - this.currentColor.lum) / 100 * i; this.cursor = {x: l, y: u}, this.currentHue = this.currentColor.hue; } }, updateCursorPosition: function (t) { var e = t.x, r = t.y, n = this.pickerRect, i = n.left, s = n.top, a = n.width, o = n.height, l = {x: Math.min(Math.max(e - i, 0), a), y: Math.min(Math.max(r - s, 0), o)}; this.mode === 'wheel' && !this.ctx.isPointInPath(this.circle.path, l.x, l.y) || (this.cursor = l, this.updateColor()); }, updateColor: function (t) { void 0 === t && (t = !1), this.preventEcho ? this.preventEcho = !1 : (this.currentColor = this.getCanvasColor(), this.preventUpdating = !0, this.$emit('change', this.currentColor), this.$emit('input', this.currentColor)); }, updateWheelColors: function () { var t = this; if (this.circle) { var e = this.pickerRect, r = e.width, n = e.height, i = this.circle.xCords, s = this.circle.yCords, a = this.circle.radius, o = this.satSlider ? this.currentSat : 100; this.ctx.clearRect(0, 0, r, n); for (var l = 0; l < 360; l += 1) { var u = t.ctx.createRadialGradient(i, s, 0, i, s, a), c = (l - 2) * Math.PI / 180, h = (l + 2) * Math.PI / 180; t.ctx.beginPath(), t.ctx.moveTo(i, s), t.ctx.arc(i, s, a, c, h), t.ctx.closePath(), u.addColorStop(0, 'hsl(' + l + ', ' + o + '%, 100%)'), u.addColorStop(0.5, 'hsl(' + l + ', ' + o + '%, 50%)'), u.addColorStop(1, 'hsl(' + l + ', ' + o + '%, 0%)'), t.ctx.fillStyle = u, t.ctx.fill(); } } }, updateSquareColors: function () { var t = this.$refs.canvas.width, e = this.$refs.canvas.height; this.ctx.clearRect(0, 0, t, e), this.ctx.fillStyle = 'hsl(' + this.currentHue + ', 100%, 50%)', this.ctx.fillRect(0, 0, t, e); var r = this.ctx.createLinearGradient(0, 0, t, 0); r.addColorStop(0, 'hsl(0, 0%, 50%)'), r.addColorStop(1, 'hsla(0, 0%, 50%, 0)'), this.ctx.fillStyle = r, this.ctx.fillRect(0, 0, t, e); var n = this.ctx.createLinearGradient(0, 0, 0, e); n.addColorStop(0, 'hsl(0, 0%, 100%)'), n.addColorStop(0.5, 'hsla(0, 0%, 100%, 0)'), n.addColorStop(0.5, 'hsla(0, 0%, 0%, 0)'), n.addColorStop(1, 'hsl(0, 0%, 0%) '), this.ctx.fillStyle = n, this.ctx.fillRect(0, 0, t, e); }, getCanvasColor: function () { var t = this.cursor, e = t.x, r = t.y, n = 0, i = 0, s = 0; if (this.mode === 'wheel') { var a = this.diameter / 2, o = (function (t, e) { return {r: Math.sqrt(t * t + e * e), theta: 180 * Math.atan2(e, t) / Math.PI}; }(e - a, -1 * (r - a))), l = o.r, u = o.theta; i = 100 * (a - l) / a, s = ~Math.sign(u) ? 360 - u : -u, n = this.currentSat; } if (this.mode === 'square') { var c = this.pickerRect; n = 100 * e / c.width, i = 100 - 100 * r / c.height, s = this.currentHue; } return new y.HslColor({alpha: this.alpha, hue: Math.round(s), sat: Math.round(n), lum: Math.round(i)}); }, handleSelect: function (t) { var e = this; t.preventDefault(), this.pickerRect = this.$refs.canvas.getBoundingClientRect(), this.updateCursorPosition(A(t)); function r (t) { window.requestAnimationFrame(function () { e.updateCursorPosition(A(t)); }); } var n = function () { document.removeEventListener('mousemove', r), document.removeEventListener('touchmove', r), document.removeEventListener('mouseup', n), document.removeEventListener('touchend', n); }; document.addEventListener('mousemove', r), document.addEventListener('touchmove', r), document.addEventListener('mouseup', n), document.addEventListener('touchend', n); }}, mounted: function () { var t = this; this.pickerRect = this.$refs.canvas.getBoundingClientRect(), this.mode === 'wheel' && this.initWheel(), this.mode === 'square' && this.initSquare(), this.$nextTick(function () { t.handleValue(t.value); }); }}; q._withStripped = !0; X = {render: q, staticRenderFns: []}; var X, Y, Z, J, K, Q, tt = (Z = void 0, J = !(X = {render: q, staticRenderFns: []}), (K = (typeof (Y = G) === 'function' ? Y.options : Y) || {}).__file = '/Users/igor/verte/src/components/Picker.vue', K.render || (K.render = X.render, K.staticRenderFns = X.staticRenderFns, K._compiled = !0, J && (K.functional = !0)), K._scopeId = Z, K); function et (t, e) { if (Q) return Q; var r = (e = e || {}).recentColors, n = e.onRecentColorsChange; return Q = new t({data: function () { return {recentColors: r || (function (t, e) { for (var r = [], n = 0; n < t; n++) { var i = typeof e === 'function' ? e() : e; r.push(i); } return r; }(6, P))}; }, methods: {addRecentColor: function (t) { this.recentColors.includes(t) || (this.recentColors.length >= 6 && this.recentColors.pop(), this.recentColors.unshift(t), n && n(this.recentColors)); }}}); } function rt () { var r = this, t = r.$createElement, n = r._self._c || t; return n('div', {staticClass: 'verte', class: {'verte--loading': r.isLoading}}, [r.menuOnly ? r._e() : n('button', {ref: 'guide', staticClass: 'verte__guide', style: 'color: ' + r.currentColor + '; fill: ' + r.currentColor + ';', attrs: {type: 'button'}, on: {click: r.toggleMenu}}, [r._t('default', function () { return [n('svg', {staticClass: 'verte__icon', attrs: {viewBox: '0 0 24 24'}}, [n('pattern', {attrs: {id: 'checkerboard', width: '6', height: '6', patternUnits: 'userSpaceOnUse', fill: 'FFF'}}, [n('rect', {attrs: {fill: '#7080707f', x: '0', width: '3', height: '3', y: '0'}}), n('rect', {attrs: {fill: '#7080707f', x: '3', width: '3', height: '3', y: '3'}})]), n('circle', {attrs: {cx: '12', cy: '12', r: '12', fill: 'url(#checkerboard)'}}), n('circle', {attrs: {cx: '12', cy: '12', r: '12'}})])]; })], 2), n('div', {staticClass: 'verte__menu-origin', class: ['verte__menu-origin--' + r.menuPosition, {'verte__menu-origin--static': r.menuOnly, 'verte__menu-origin--active': r.isMenuActive}]}, [n('div', {ref: 'menu', staticClass: 'verte__menu', style: 'transform: translate(' + r.delta.x + 'px, ' + r.delta.y + 'px)', attrs: {tabindex: '-1'}}, [r.menuOnly ? r._e() : n('button', {staticClass: 'verte__close', attrs: {type: 'button'}, on: {click: r.closeMenu}}, [n('svg', {staticClass: 'verte__icon verte__icon--small', attrs: {viewBox: '0 0 24 24'}}, [n('title', [r._v('Close Icon')]), n('path', {attrs: {d: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z'}})])]), r.draggable && !r.menuOnly ? n('div', {staticClass: 'verte__draggable', on: {mousedown: r.handleMenuDrag, touchstart: r.handleMenuDrag}}) : r._e(), n('Picker', {attrs: {mode: r.picker, alpha: r.alpha}, model: {value: r.currentColor, callback: function (t) { r.currentColor = t; }, expression: 'currentColor'}}), n('div', {staticClass: 'verte__controller'}, [r.enableAlpha ? n('Slider', {attrs: {gradient: ['rgba(' + r.rgb.red + ', ' + r.rgb.green + ', ' + r.rgb.blue + ', 0)', 'rgba(' + r.rgb.red + ', ' + r.rgb.green + ', ' + r.rgb.blue + ', 1)'], min: 0, max: 1, step: 0.01, editable: !1}, model: {value: r.alpha, callback: function (t) { r.alpha = t; }, expression: 'alpha'}}) : r._e(), r.rgbSliders ? [n('Slider', {attrs: {gradient: ['rgb(0,' + r.rgb.green + ',' + r.rgb.blue + ')', 'rgb(255,' + r.rgb.green + ',' + r.rgb.blue + ')']}, model: {value: r.rgb.red, callback: function (t) { r.$set(r.rgb, 'red', t); }, expression: 'rgb.red'}}), n('Slider', {attrs: {gradient: ['rgb(' + r.rgb.red + ',0,' + r.rgb.blue + ')', 'rgb(' + r.rgb.red + ',255,' + r.rgb.blue + ')']}, model: {value: r.rgb.green, callback: function (t) { r.$set(r.rgb, 'green', t); }, expression: 'rgb.green'}}), n('Slider', {attrs: {gradient: ['rgb(' + r.rgb.red + ',' + r.rgb.green + ',0)', 'rgb(' + r.rgb.red + ',' + r.rgb.green + ',255)']}, model: {value: r.rgb.blue, callback: function (t) { r.$set(r.rgb, 'blue', t); }, expression: 'rgb.blue'}})] : r._e(), n('div', {staticClass: 'verte__inputs'}, [n('button', {staticClass: 'verte__model', attrs: {type: 'button'}, on: {click: r.switchModel}}, [r._v(r._s(r.currentModel))]), r.currentModel === 'hsl' ? [n('input', {staticClass: 'verte__input', attrs: {type: 'number', max: '360', min: '0'}, domProps: {value: r.hsl.hue}, on: {change: function (t) { return r.inputChanged(t, 'hue'); }}}), n('input', {staticClass: 'verte__input', attrs: {type: 'number', min: '0', max: '100'}, domProps: {value: r.hsl.sat}, on: {change: function (t) { return r.inputChanged(t, 'sat'); }}}), n('input', {staticClass: 'verte__input', attrs: {type: 'number', min: '0', max: '100'}, domProps: {value: r.hsl.lum}, on: {change: function (t) { return r.inputChanged(t, 'lum'); }}})] : r._e(), r.currentModel === 'rgb' ? [n('input', {staticClass: 'verte__input', attrs: {type: 'number', min: '0', max: '255'}, domProps: {value: r.rgb.red}, on: {change: function (t) { return r.inputChanged(t, 'red'); }}}), n('input', {staticClass: 'verte__input', attrs: {type: 'number', min: '0', max: '255'}, domProps: {value: r.rgb.green}, on: {change: function (t) { return r.inputChanged(t, 'green'); }}}), n('input', {staticClass: 'verte__input', attrs: {type: 'number', min: '0', max: '255'}, domProps: {value: r.rgb.blue}, on: {change: function (t) { return r.inputChanged(t, 'blue'); }}})] : r._e(), r.currentModel === 'hex' ? [n('input', {staticClass: 'verte__input', attrs: {type: 'text'}, domProps: {value: r.hex}, on: {change: function (t) { return r.inputChanged(t, 'hex'); }}})] : r._e(), n('button', {staticClass: 'verte__submit', attrs: {type: 'button'}, on: {click: r.submit}}, [n('title', [r._v('Submit Icon')]), n('svg', {staticClass: 'verte__icon', attrs: {viewBox: '0 0 24 24'}}, [n('path', {attrs: {d: 'M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z'}})])])], 2), r.showHistory ? n('div', {ref: 'recent', staticClass: 'verte__recent'}, r._l(r.historySource, function (e) { return n('a', {staticClass: 'verte__recent-color', style: 'color: ' + e, attrs: {role: 'button', href: '#'}, on: {click: function (t) { return t.preventDefault(), r.selectColor(e); }}}); }), 0) : r._e()], 2)], 1)])]); } var nt = {name: 'Verte', components: {Picker: tt, Slider: z}, props: {picker: {type: String, default: 'square', validator: F(0, ['wheel', 'square'])}, value: {type: String, default: '#000'}, model: {type: String, default: 'hsl', validator: F(0, ['rgb', 'hex', 'hsl'])}, display: {type: String, default: 'picker', validator: F(0, ['picker', 'widget'])}, menuPosition: {type: String, default: 'bottom', validator: F(0, ['top', 'bottom', 'left', 'right', 'center'])}, showHistory: {type: Boolean, default: !0}, colorHistory: {type: Array, default: null}, enableAlpha: {type: Boolean, default: !0}, rgbSliders: {type: Boolean, default: !1}, draggable: {type: Boolean, default: !0}}, data: function () { return {isMenuActive: !0, isLoading: !0, rgb: E('#000'), hex: $('#000'), hsl: R('#000'), delta: {x: 0, y: 0}, currentModel: '', internalColorHistory: []}; }, computed: {$_verteStore: function () { return et(); }, historySource: function () { return this.colorHistory ? this.internalColorHistory : this.$_verteStore.recentColors; }, currentColor: {get: function () { return this[this.model], this[this.model].toString(); }, set: function (t) { this.selectColor(t); }}, alpha: {get: function () { return this[this.model] ? isNaN(this[this.model].alpha) ? 1 : this[this.model].alpha : 1; }, set: function (t) { this[this.model].alpha = t, this.selectColor(this[this.model]); }}, menuOnly: function () { return this.display === 'widget'; }}, watch: {value: function (t, e) { t !== e && t !== this.currentColor && this.selectColor(t); }, rgb: {handler: function (t) { this.hex = $(t.toString()), this.$emit('input', this.currentColor); }, deep: !0}, colorHistory: function (t) { this.internalColorHistory !== t && (this.internalColorHistory = [].concat(t)); }}, beforeCreate: function () { et(this.$options._base); }, install: function (t, e) { et(t, e), t.component('Verte', this); }, created: function () { this.colorHistory && (this.internalColorHistory = [].concat(this.colorHistory)), this.selectColor(this.value || '#000', !0), this.currentModel = this.model; }, mounted: function () { var t = this; this.$nextTick(function () { t.isLoading = !1, t.menuOnly || (t.isMenuActive = !1); }); }, methods: {selectColor: function (t, e) { void 0 === e && (e = !1), (function (t) { var e = c(t); return e === 'rgb' ? !C(t).invalid : e === 'hex' ? !_(t).invalid : e === 'hsl' && !x(t).invalid; }(t)) && (this.rgb = E(t), this.hex = $(t), this.hsl = R(t), e || this.$emit('input', this.currentColor)); }, switchModel: function () { var t = ['hex', 'rgb', 'hsl'], e = t.indexOf(this.currentModel); this.currentModel = t[e + 1] || t[0]; }, handleMenuDrag: function (t) { var r = this; if (t.button !== 2) { t.preventDefault(); var n = Object.assign({}, this.delta), i = A(t), e = function (e) { window.requestAnimationFrame(function () { var t = A(e); r.delta.x = n.x + t.x - i.x, r.delta.y = n.y + t.y - i.y; }); }, s = function () { document.removeEventListener('mousemove', e), document.removeEventListener('mouseup', s), document.removeEventListener('touchmove', e), document.removeEventListener('touchup', s); }; document.addEventListener('mousemove', e), document.addEventListener('mouseup', s), document.addEventListener('touchmove', e), document.addEventListener('touchup', s); } }, submit: function () { this.$emit('beforeSubmit', this.currentColor), this.addColorToHistory(this.currentColor), this.$emit('input', this.currentColor), this.$emit('submit', this.currentColor); }, addColorToHistory: function (t) { if (this.colorHistory) return this.internalColorHistory.length >= 6 && this.internalColorHistory.pop(), this.internalColorHistory.unshift(t), void this.$emit('update:colorHistory', this.internalColorHistory); this.$_verteStore.addRecentColor(this.currentColor); }, inputChanged: function (t, e) { var r = t.target; if (this.currentModel !== 'hex') { var n = Math.min(Math.max(r.value, r.min), r.max); this[this.currentModel][e] = n, this.selectColor(this[this.currentModel]); } else this.selectColor(r.value); }, toggleMenu: function () { this.isMenuActive ? this.closeMenu() : this.openMenu(); }, closeMenu: function () { this.isMenuActive = !1, document.removeEventListener('mousedown', this.closeCallback), this.$emit('close', this.currentColor); }, openMenu: function () { var e = this; this.isMenuActive = !0, this.closeCallback = function (t) { N(t.target, e.$refs.menu) || N(t.target, e.$refs.guide) || e.closeMenu(); }, document.addEventListener('mousedown', this.closeCallback); }}}; rt._withStripped = !0; var it, st, at, ot, lt; it = {render: rt, staticRenderFns: []}; return at = void 0, ot = !(it = {render: rt, staticRenderFns: []}), (lt = (typeof (st = nt) === 'function' ? st.options : st) || {}).__file = '/Users/igor/verte/src/components/Verte.vue', lt.render || (lt.render = it.render, lt.staticRenderFns = it.staticRenderFns, lt._compiled = !0, ot && (lt.functional = !0)), lt._scopeId = at, lt; }));
